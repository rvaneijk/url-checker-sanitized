AWSTemplateFormatVersion: '2010-09-09'
Description: '[sanitized] Domain and Certificate Setup'

Parameters:
  DomainName:
    Type: String
    # Default: check.example.com  <-- Removed sensitive domain name
    Description: Domain name for the API endpoint

  HostedZoneId:
    Type: String
    Description: Route53 hosted zone ID for example.com  <-- Removed sensitive domain name

  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, prod]
    Description: Environment name for resource tagging

Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName:!Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName:!Ref DomainName
          HostedZoneId:!Ref HostedZoneId
      Tags:
        - Key: Environment
          Value:!Ref Environment
        - Key: Service
          Value: [sanitized]
        - Key: ManagedBy
          Value: CloudFormation

  APICustomDomain:
    Type: AWS::ApiGateway::DomainName
    DependsOn: Certificate
    Properties:
      DomainName:!Ref DomainName
      RegionalCertificateArn:!Ref Certificate
      EndpointConfiguration:
        Types:
          - REGIONAL
      Tags:
        - Key: Environment
          Value:!Ref Environment
        - Key: Service
          Value: [sanitized]
        - Key: ManagedBy
          Value: CloudFormation

  DNSRecord:
    Type: AWS::Route53::RecordSet
    DependsOn: APICustomDomain
    Properties:
      HostedZoneId:!Ref HostedZoneId
      Name:!Ref DomainName
      Type: A
      AliasTarget:
        DNSName:!GetAtt APICustomDomain.RegionalDomainName
        HostedZoneId:!GetAtt APICustomDomain.RegionalHostedZoneId

Outputs:
  CertificateArn:
    Description: ACM Certificate ARN
    Value:!Ref Certificate
    Export:
      Name:!Sub ${AWS::StackName}-CertificateArn

  CustomDomainName:
    Description: API Gateway Custom Domain Name
    Value:!Ref DomainName
    Export:
      Name:!Sub ${AWS::StackName}-CustomDomainName